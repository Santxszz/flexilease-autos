{
    "openapi": "3.0.0",
    "info": {
      "version": "1.0.0",
      "title": "FlexiLease Autos API",
      "description": "A REST API that controls the actions of a car rental company with extreme skill"
    },
    "servers": [
      {
        "url": "http://localhost:3000/v1/"
      }
    ],
    "tags": [
      {
        "name": "Cars",
        "description": "All controller of cars module."
      },
      {
        "name": "Users",
        "description": "All controller of users module."
      }
    ],
    "paths": {
      "/car": {
        "post": {
          "security": [
            {
              "bearerAuth": []
            }
          ],
          "tags": [
            "Cars"
          ],
          "summary": "Create a new car",
          "description": "That's endpoint make the creation of a new car in the system.",
          "requestBody": {
            "description": "Car Request Body ALL Required!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "model",
                    "color",
                    "year",
                    "valuePerDay",
                    "acessories",
                    "numberOfPassengers"
                  ],
                  "properties": {
                    "model": {
                      "type": "string",
                      "example": "Honda Civic"
                    },
                    "color": {
                      "type": "string",
                      "example": "black"
                    },
                    "year": {
                      "type": "number",
                      "example": 2009
                    },
                    "acessories": {
                      "type": "array",
                      "items": {},
                      "example": [
                        {
                          "name": "Sound"
                        },
                        {
                          "name": "Solar"
                        }
                      ]
                    },
                    "numberOfPassengers": {
                      "type": "number"
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Created",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Car"
                  }
                }
              }
            },
            "400": {
              "description": "The acessories not accept another syntax! Please use [ acessories: {name: value} ] <br> The year of vehicle is invalid, must be between 1950-2023! <br> Requires at least one accessory! <br> Validate Error"
            },
            "401": {
              "description": "Not Authorized."
            },
            "403": {
              "description": "Token provided is invalid!"
            },
            "500": {
              "description": "Internal server error"
            },
            "default": {
              "description": "Unexpected error"
            }
          }
        },
        "get": {
          "security": [
            {
              "bearerAuth": []
            }
          ],
          "tags": [
            "Cars"
          ],
          "summary": "List all cars registred in system",
          "description": "That's endpoint lists all cars registreds in the system.",
          "parameters": [
            {
              "in": "query",
              "name": "page",
              "schema": {
                "type": "integer",
                "description": "The number of items to skip before starting to collect the result set"
              }
            },
            {
              "in": "query",
              "name": "limit",
              "schema": {
                "type": "integer",
                "description": "The numbers of items to return"
              }
            },
            {
              "in": "query",
              "name": "model",
              "schema": {
                "type": "string",
                "description": "The model param for search"
              }
            },
            {
              "in": "query",
              "name": "color",
              "schema": {
                "type": "string",
                "description": "The color param for search"
              }
            },
            {
              "in": "query",
              "name": "year",
              "schema": {
                "type": "integer",
                "description": "The year param for search"
              }
            },
            {
              "in": "query",
              "name": "valuePerDay",
              "schema": {
                "type": "number",
                "description": "The valuePerDay param for search"
              }
            },
            {
              "in": "query",
              "name": "acessories",
              "schema": {
                "type": "array",
                "items": {},
                "example": [
                  {
                    "name": "Multmedia"
                  }
                ],
                "description": "The acessories param for search"
              }
            },
            {
              "in": "query",
              "name": "numberOfPassengers",
              "schema": {
                "type": "integer",
                "description": "The numberOfPassengers param for search"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/CarsResponse"
                  }
                }
              }
            },
            "401": {
              "description": "Not Authorized."
            },
            "403": {
              "description": "Token provided is invalid!"
            },
            "500": {
              "description": "Internal server error"
            },
            "default": {
              "description": "Unexpected error"
            }
          }
        }
      },
      "/car/{id}": {
        "delete": {
          "security": [
            {
              "bearerAuth": []
            }
          ],
          "tags": [
            "Cars"
          ],
          "summary": "Delete a specific car",
          "description": "That's endpoint make the exclusion of new car in the system by your id.",
          "parameters": [
            {
              "in": "path",
              "schema": {
                "type": "integer",
                "minimum": 1
              },
              "name": "id",
              "required": true
            }
          ],
          "responses": {
            "204": {
              "description": "No content"
            },
            "400": {
              "description": "Token is invalid"
            },
            "401": {
              "description": "Not Authorized."
            },
            "403": {
              "description": "Token provided is invalid!"
            },
            "404": {
              "description": "Token not informed!"
            },
            "500": {
              "description": "Internal server error"
            },
            "default": {
              "description": "Unexpected error"
            }
          }
        },
        "get": {
          "security": [
            {
              "bearerAuth": []
            }
          ],
          "tags": [
            "Cars"
          ],
          "summary": "Show a specific car details",
          "description": "That's endpoint make the exibition of one car in the system by your id.",
          "parameters": [
            {
              "in": "path",
              "schema": {
                "type": "integer",
                "minimum": 1
              },
              "name": "id",
              "required": true
            }
          ],
          "responses": {
            "200": {
              "description": "Created",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Car"
                  }
                }
              }
            },
            "401": {
              "description": "Not Authorized."
            },
            "403": {
              "description": "Token provided is invalid!"
            },
            "404": {
              "description": "Car not found"
            },
            "500": {
              "description": "Internal server error"
            },
            "default": {
              "description": "Unexpected error"
            }
          }
        },
        "put": {
          "security": [
            {
              "bearerAuth": []
            }
          ],
          "tags": [
            "Cars"
          ],
          "summary": "Update a car details",
          "description": "That's endpoint make the update of a car in the system.",
          "parameters": [
            {
              "in": "path",
              "schema": {
                "type": "integer",
                "minimum": 1
              },
              "name": "id",
              "required": true
            }
          ],
          "requestBody": {
            "description": "All fields is optional's",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "model": {
                      "type": "string",
                      "example": "Honda Civic"
                    },
                    "color": {
                      "type": "string",
                      "example": "black"
                    },
                    "year": {
                      "type": "number",
                      "example": 2009
                    },
                    "acessories": {
                      "type": "array",
                      "items": {},
                      "example": [
                        {
                          "name": "Sound"
                        },
                        {
                          "name": "Solar"
                        }
                      ]
                    },
                    "numberOfPassengers": {
                      "type": "number"
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Created",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Car"
                  }
                }
              }
            },
            "400": {
              "description": "The acessories not accept another syntax! Please use [ acessories: {name: value} ] <br> The year of vehicle is invalid, must be between 1950-2023! <br> Requires at least one accessory! <br> Validate Error"
            },
            "401": {
              "description": "Not Authorized."
            },
            "403": {
              "description": "Token provided is invalid!"
            },
            "500": {
              "description": "Internal server error"
            },
            "default": {
              "description": "Unexpected error"
            }
          }
        },
        "patch": {
          "security": [
            {
              "bearerAuth": []
            }
          ],
          "tags": [
            "Cars"
          ],
          "summary": "Update (PATCH) a car details",
          "description": "That's endpoint make the update (PATH) of a car in the system.",
          "parameters": [
            {
              "in": "path",
              "schema": {
                "type": "integer",
                "minimum": 1
              },
              "name": "id",
              "required": true
            }
          ],
          "requestBody": {
            "description": "Acessories field's required.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "acessories"
                  ],
                  "properties": {
                    "model": {
                      "type": "string",
                      "example": "Honda Civic"
                    },
                    "color": {
                      "type": "string",
                      "example": "black"
                    },
                    "year": {
                      "type": "number",
                      "example": 2009
                    },
                    "acessories": {
                      "type": "array",
                      "items": {},
                      "example": [
                        {
                          "name": "Sound"
                        },
                        {
                          "name": "Solar"
                        }
                      ]
                    },
                    "numberOfPassengers": {
                      "type": "number"
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Created",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Car"
                  }
                }
              }
            },
            "400": {
              "description": "The acessories not accept another syntax! Please use [ acessories: {name: value} ] <br> The year of vehicle is invalid, must be between 1950-2023! <br> Requires at least one accessory! <br> Validate Error<br>Requires at least one accessory!"
            },
            "401": {
              "description": "Not Authorized."
            },
            "403": {
              "description": "Token provided is invalid!"
            },
            "500": {
              "description": "Internal server error"
            },
            "default": {
              "description": "Unexpected error"
            }
          }
        }
      },
      "/user": {
        "post": {
          "summary": "Create a new user",
          "description": "That's endpoint makes a new user",
          "tags": [
            "Users"
          ],
          "requestBody": {
            "description": "All fields required.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "name",
                    "cpf",
                    "birth",
                    "cep",
                    "email",
                    "password"
                  ],
                  "properties": {
                    "name": {
                      "type": "string",
                      "example": "Alexandre G."
                    },
                    "cpf": {
                      "type": "string",
                      "example": "123.000.000-02"
                    },
                    "birth": {
                      "type": "string",
                      "example": "25/02/2004"
                    },
                    "cep": {
                      "type": "string",
                      "example": "764000-000"
                    },
                    "email": {
                      "type": "string",
                      "example": "alexandreg@compasso.com.br"
                    },
                    "password": {
                      "type": "string",
                      "example": "alexandre123"
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Created",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            },
            "400": {
              "description": "The email or cpf already in use.<br>Name is invalid remove the numbers.<br>Cep is invalid.<br>Validation Error"
            },
            "500": {
              "description": "Internal server error"
            },
            "default": {
              "description": "Unexpected error"
            }
          }
        }
      },
      "/user/{id}": {
        "delete": {
          "summary": "Delete a specific user",
          "description": "That's endpoint makes a new user",
          "parameters": [
            {
              "in": "path",
              "schema": {
                "type": "integer",
                "minimum": 1
              },
              "name": "id",
              "required": true
            }
          ],
          "security": [
            {
              "bearerAuth": []
            }
          ],
          "tags": [
            "Users"
          ],
          "responses": {
            "204": {
              "description": "No content"
            },
            "400": {
              "description": "Token is invalid"
            },
            "401": {
              "description": "Not Authorized."
            },
            "403": {
              "description": "Token provided is invalid!"
            },
            "404": {
              "description": "Token not informed!"
            },
            "500": {
              "description": "Internal server error"
            },
            "default": {
              "description": "Unexpected error"
            }
          }
        }
      }
    },
    "components": {
      "securitySchemes": {
        "bearerAuth": {
          "type": "http",
          "scheme": "bearer",
          "bearerFormat": "JWT"
        }
      },
      "schemas": {
        "Car": {
          "type": "object",
          "required": [
            "id",
            "model",
            "color",
            "year",
            "valuePerDay",
            "acessories",
            "numberOfPassengers"
          ],
          "properties": {
            "id": {
              "type": "number",
              "example": 1
            },
            "model": {
              "type": "string",
              "example": "Honda Civic"
            },
            "color": {
              "type": "string",
              "example": "black"
            },
            "year": {
              "type": "number",
              "example": 2009
            },
            "acessories": {
              "type": "array",
              "items": {},
              "example": [
                {
                  "name": "Sound"
                },
                {
                  "name": "Solar"
                }
              ]
            },
            "numberOfPassengers": {
              "type": "number"
            }
          }
        },
        "CarsResponse": {
          "type": "object",
          "properties": {
            "id": {
              "type": "number",
              "example": 1
            },
            "model": {
              "type": "string",
              "example": "Chevette SL Turbo"
            },
            "color": {
              "type": "string",
              "example": "blue"
            },
            "year": {
              "type": "integer",
              "example": 1990
            },
            "acessories": {
              "type": "array",
              "items": {},
              "example": [
                {
                  "name": "Sound"
                },
                {
                  "name": "Air Condition"
                }
              ]
            },
            "numberOfPassengers": {
              "type": "number",
              "example": 4
            },
            "total": {
              "type": "number",
              "example": 10
            },
            "limit": {
              "type": "number",
              "example": 1
            },
            "offset": {
              "type": "number",
              "example": 1
            },
            "offsets": {
              "type": "number",
              "example": 1
            }
          }
        },
        "User": {
          "type": "object",
          "required": [
            "id",
            "name",
            "cpf",
            "birth",
            "email",
            "qualified",
            "cep",
            "neighbordhood",
            "street",
            "complement",
            "city",
            "uf"
          ],
          "properties": {
            "id": {
              "type": "number",
              "example": 1
            },
            "name": {
              "type": "string",
              "example": "Alexandre G."
            },
            "cpf": {
              "type": "string",
              "example": "123.000.000-02"
            },
            "birth": {
              "type": "string",
              "example": "25/02/2004"
            },
            "cep": {
              "type": "string",
              "example": "764000-000"
            },
            "email": {
              "type": "string",
              "example": "alexandreg@compasso.com.br"
            },
            "qualified": {
              "type": "boolean",
              "example": true
            },
            "neighbordhood": {
              "type": "string",
              "example": "Bairro Bom"
            },
            "street": {
              "type": "string",
              "example": "Rua Ótima"
            },
            "complement": {
              "type": "string",
              "example": "Complemento Perfeito"
            },
            "city": {
              "type": "string",
              "example": "A Melhor Cidade"
            },
            "uf": {
              "type": "string",
              "example": "UF Boa Também"
            }
          }
        }
      }
    }
  }